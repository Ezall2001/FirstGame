GAME := Surrounded_By_Water
BINDIR := bin
GAMEDIR := $(addprefix $(BINDIR)/,$(GAME).exe)
SRCS := $(wildcard src/*/*.c) $(wildcard src/*/*/*.c) src/$(GAME).c src/utils.c
HEADERS := $(wildcard src/headers/*.h)
OBJDIR := build
OBJS := $(SRCS:src/%.c=$(OBJDIR)/%.o)

all: build
	@./bin/$(GAME)


game/dev-%: build
	@./bin/$(GAME) $@ placeholder

proto1/dev-%: build
	@echo test: the very first prototype of the game
	@./bin/$(GAME) $@ placeholder

lvl_system/dev-%: build
	@echo test: leveling up simulation
	@./bin/$(GAME) $@ placeholder

responsive_UI/dev-%: build
	@echo test: a simulation for making the UI fully responsive
	@./bin/$(GAME) $@ placeholder

projectile/dev-%: build
	@echo test: a simulation to test projectile design
	@./bin/$(GAME) $@ placeholder



flags:
	@echo "-fullscreen: set the game in full screen mode"
	@echo "-fps: show fps in the window"
	@echo "-limit_fps:X limit the fps to X" 

	@echo "-full_dev: draw all the collision boxes, ranges, directions, decisions, and gives capabilty to change players and enemies"
	@echo "-boxes: draw the boxes around enemies and players"
	@echo "-ranges: draw the ranges of enemies and players"
	@echo "-spawn: character and enemy flags combined"
	@echo "-character: let you change the player mid game"
	@echo "-enemy: let you spawn enemies mid game"


tests:
	@echo "proto1: testing core of the game (movement, animation, shooting, gameplay ...)"
	@echo "lvl_system: simulation of lvling up"
	@echo "responsive_UI: testing how the UI should respond to window resize + rendering settings"
	@echo "projectile: testing the projectile designs"


build: $(OBJS)
	@gcc \
	-std=c99 \
	$^ \
	-I ".\SDL\include" \
	-L ".\SDL\lib" \
	-l mingw32 \
	-l SDL2main \
	-l SDL2 \
	-l SDL2_ttf \
	-l SDL2_mixer \
	-l SDL2_image \
	-o $(GAMEDIR)


$(OBJDIR)/%.o: src/%.c $(HEADERS)
	@gcc -c -o $@ $<


clean:
	@rm -f build/*/tests/*.o
	@rm -f build/*/*.o
	@rm -f build/$(GAME).o
	@rm -f bin/$(GAME).exe

reset_saves:
	@rm -f saves/*.txt

reset_dev:
	@rm -f saves/dev.txt

reset_settings:
	@rm -f saves/settings.txt

count_lines:
	@find ./src -name *.h -o -name *.c | xargs wc -l




